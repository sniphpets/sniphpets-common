priority -40

global !p
import sniphpets

def property_visibility(m):
	if m == 'u':
		return 'public'
	elif m == 'o':
		return 'protected'

	return 'private'

def method_visibility(m):
	if m == 'o':
		return 'protected'
	elif m == 'i':
		return 'private'

	return 'public'
endglobal

snippet "p(u|o|i)?(s)?" "Property" br
`!p snip.rv = property_visibility(match.group(1))` `!p snip.rv = 'static ' if match.group(2) else ''`${1:string} \$${2:property};
endsnippet

snippet get "Method / Getter" b
public function get${1}()${2:: ${3:string}}
{
	return \$this->${1/^./\l$0/};
}
endsnippet

snippet set "Method / Setter" b
public function set${1}(${2:$1 }$${1/^./\l$0/})${3:: void}
{
	\$this->${1/^./\l$0/} = \$${1/^./\l$0/};
}
endsnippet

snippet getset "Method / Getter and setter" bm
public function get$1()${3:: ${4:${2/\s//}}}
{
	return \$this->${1/^./\l$0/};
}

public function set${1}(${2:$1 }\$${1/^./\l$0/})${5:: void}
{
	\$this->${1/^./\l$0/} = \$${1/^./\l$0/};
}
endsnippet

snippet "m(u|o|i)?(s)?" "Method" br
`!p snip.rv = method_visibility(match.group(1))` `!p snip.rv = 'static ' if match.group(2) else ''`function ${1:methodName}(${2})${3:: ${4:string}}
{
	${VISUAL}${5}
}
endsnippet

snippet "m(a|;)(u|o)?(s)?" "Abstract or empty method" br
`!p snip.rv = 'abstract ' if match.group(1) == 'a' else ''``!p snip.rv = method_visibility(match.group(2))` `!p snip.rv = 'static ' if match.group(3) else ''`function ${1:methodName}(${2})${3:: ${4:string}};
endsnippet

snippet clone "Magic method: __clone" b
public function __clone()
{
	${VISUAL}${1}
}
endsnippet

snippet sleep "Magic method: __sleep" b
public function __sleep()
{
	${VISUAL}${1}
}
endsnippet

snippet wakeup "Magic method: __wakeup" b
public function __wakeup()
{
	${VISUAL}${1}
}
endsnippet

snippet invoke "Magic method: __invoke" b
public function __invoke(${1})
{
	${VISUAL}${2}
}
endsnippet
